# This is the CMakeCache file.
# For build in directory: e:/prjs/FireBreath-master/buildex
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a file.
ATLLIB:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/atlmfc/lib/amd64/atls.lib

//Path to a file.
ATLWIN:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/atlmfc/include/atlwin.h

ATL_INCLUDE_DIR:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/atlmfc/include

ATL_LIBRARY_DIR:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/atlmfc/lib/amd64

//Value Computed by CMake
ActiveXCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/ActiveXCore

//Dependencies for the target
ActiveXCore_LIB_DEPENDS:STATIC=general;boost_thread;general;boost_system;general;PluginCore;general;ScriptingCore;

//Value Computed by CMake
ActiveXCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/ActiveXCore

//Build example projects
BUILD_EXAMPLES:BOOL=OFF

//If TRUE, log4cplus is built as a shared library, otherwise as
// a static library
BUILD_SHARED_LIBS:BOOL=FALSE

//Value Computed by CMake
BasicMediaPlayer_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/projects/BasicMediaPlayer

//Dependencies for the target
BasicMediaPlayer_LIB_DEPENDS:STATIC=general;psapi;general;ActiveXCore;general;PluginCore;general;BasicMediaPlayer_PluginAuto;general;NpapiCore;general;ScriptingCore;general;PluginCore;general;boost_thread;general;boost_system;general;log4cplus;general;psapi;general;Wininet;general;Strmiids.lib;

//Value Computed by CMake
BasicMediaPlayer_PluginAuto_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/projects/BasicMediaPlayer/PluginAuto

//Dependencies for the target
BasicMediaPlayer_PluginAuto_LIB_DEPENDS:STATIC=general;psapi;

//Value Computed by CMake
BasicMediaPlayer_PluginAuto_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/PluginAuto

//Value Computed by CMake
BasicMediaPlayer_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/examples/BasicMediaPlayer

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/FireBreath

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/bin/x86_amd64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=FireBreath

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=/DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=/D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Value Computed by CMake
FBTP_PluginAuto_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/projects/FBTestPlugin/PluginAuto

//Dependencies for the target
FBTP_PluginAuto_LIB_DEPENDS:STATIC=general;psapi;

//Value Computed by CMake
FBTP_PluginAuto_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/PluginAuto

//Value Computed by CMake
FBTestPlugin_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/projects/FBTestPlugin

//Dependencies for the target
FBTestPlugin_LIB_DEPENDS:STATIC=general;psapi;general;ActiveXCore;general;PluginCore;general;FBTP_PluginAuto;general;NpapiCore;general;ScriptingCore;general;PluginCore;general;boost_thread;general;boost_system;general;log4cplus;general;psapi;general;Wininet;

//Value Computed by CMake
FBTestPlugin_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/examples/FBTestPlugin

//Location to find global project configuration files (.h files,
// etc)
FB_CONFIG_DIR:STRING=E:/prjs/FireBreath-master/src/config

//No help, variable specified on the command line.
FB_PROJECTS_DIR:UNINITIALIZED=E:\prjs\FireBreath-master\examples

FB_ROOT:FILEPATH=E:/prjs/FireBreath-master

FB_ROOT_DIR:STRING=E:/prjs/FireBreath-master

FB_SOURCE_DIR:STRING=E:/prjs/FireBreath-master/src

FB_TEST_DIR:STRING=E:/prjs/FireBreath-master/tests

//Enable automatic git operations.
FIREBREATH_AUTO_GIT:BOOL=ON

//Value Computed by CMake
FireBreath_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex

//Value Computed by CMake
FireBreath_Cmake_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/cmake_common

//Dependencies for target
FireBreath_Cmake_LIB_DEPENDS:STATIC=

//Value Computed by CMake
FireBreath_Cmake_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/cmake

//Value Computed by CMake
FireBreath_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master

//Path to a library.
LIBADVAPI32:FILEPATH=LIBADVAPI32-NOTFOUND

//Path to a library.
LIBCPOSIX:FILEPATH=LIBCPOSIX-NOTFOUND

//Path to a library.
LIBICONV:FILEPATH=LIBICONV-NOTFOUND

//Path to a library.
LIBKERNEL32:FILEPATH=LIBKERNEL32-NOTFOUND

//Path to a library.
LIBNSL:FILEPATH=LIBNSL-NOTFOUND

//Path to a library.
LIBPOSIX4:FILEPATH=LIBPOSIX4-NOTFOUND

//Path to a library.
LIBRT:FILEPATH=LIBRT-NOTFOUND

//Path to a library.
LIBSOCKET:FILEPATH=LIBSOCKET-NOTFOUND

//Path to a library.
LIBWS2_32:FILEPATH=LIBWS2_32-NOTFOUND

//Build with Qt4DebugAppender
LOG4CPLUS_QT4:BOOL=OFF

//Define for compilers/standard libraries that have working C locale.
LOG4CPLUS_WORKING_C_LOCALE:BOOL=OFF

//Define for compilers/standard libraries that support more than
// just the C locale.
LOG4CPLUS_WORKING_LOCALE:BOOL=ON

//Path to a file.
MFCWIN:FILEPATH=MFCWIN-NOTFOUND

//Value Computed by CMake
NpapiCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/NpapiCore

//Dependencies for the target
NpapiCore_LIB_DEPENDS:STATIC=general;boost_thread;general;boost_system;

//Value Computed by CMake
NpapiCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/NpapiCore

//Value Computed by CMake
PluginCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/PluginCore

//Dependencies for target
PluginCore_LIB_DEPENDS:STATIC=

//Value Computed by CMake
PluginCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/PluginCore

//Value Computed by CMake
ScriptingCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/ScriptingCore

//Dependencies for the target
ScriptingCore_LIB_DEPENDS:STATIC=general;boost_thread;general;boost_system;

//Value Computed by CMake
ScriptingCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/ScriptingCore

//Value Computed by CMake
UnitTest++_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/unittest-cpp/UnitTest++

//Dependencies for target
UnitTest++_LIB_DEPENDS:STATIC=

//Value Computed by CMake
UnitTest++_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/tests/unittest-cpp/UnitTest++

//Value Computed by CMake
UnitTest_ActiveXCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/ActiveXCoreTest

//Value Computed by CMake
UnitTest_ActiveXCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/tests/ActiveXCoreTest

//Value Computed by CMake
UnitTest_ScriptingCore_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/ScriptingCoreTest

//Value Computed by CMake
UnitTest_ScriptingCore_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/tests/ScriptingCoreTest

//Visual Studio VC directory path
VC_DIR:STRING=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC

VS_DIR:STRING=C:/Program Files (x86)/Microsoft Visual Studio 12.0

//Build with dynamic MSVC runtime (/MD)
WITH_DYNAMIC_MSVC_RUNTIME:BOOL=OFF

//Build with async surface drawing support
WITH_FBWIN_ASYNCSURFACE:BOOL=OFF

//Use iconv() for char->wchar_t conversion.
WITH_ICONV:BOOL=OFF

//Build with system Boost
WITH_SYSTEM_BOOST:BOOL=OFF

//Path to a file.
WIX_ROOT_DIR:PATH=WIX_ROOT_DIR-NOTFOUND

//Dependencies for target
boost_date_time_LIB_DEPENDS:STATIC=

//Dependencies for target
boost_regex_LIB_DEPENDS:STATIC=

//Dependencies for target
boost_system_LIB_DEPENDS:STATIC=

//Dependencies for target
boost_thread_LIB_DEPENDS:STATIC=

//Value Computed by CMake
log4cplus_BINARY_DIR:STATIC=E:/prjs/FireBreath-master/buildex/fblibs/FBTestPlugin/log4cplus

//Dependencies for the target
log4cplus_LIB_DEPENDS:STATIC=general;ws2_32;general;advapi32;

//Value Computed by CMake
log4cplus_SOURCE_DIR:STATIC=E:/prjs/FireBreath-master/src/libs/log4cplus


########################
# INTERNAL cache entries
########################

//ATL and MFC include dirs
ATL_INCLUDE_DIRS:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio 12.0/VC/atlmfc/include
//Used to link extra ATL libraries on systems that need it
ATL_LIBRARY:INTERNAL=
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=e:/prjs/FireBreath-master/buildex
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=11
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 12 2013 Win64
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=E:/prjs/FireBreath-master
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=20
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.11
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//DDK Search Paths
DDK_SEARCH_PATHS:INTERNAL=;C:/WinDDK;C:\Program Files/WinDDK;C:\Program Files\Common Files/WinDDK
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Test HAVE_ATTRIBUTE_VISIBILITY
HAVE_ATTRIBUTE_VISIBILITY:INTERNAL=
//Test HAVE_CXX11_THREAD_LOCAL
HAVE_CXX11_THREAD_LOCAL:INTERNAL=
//Test HAVE_DECLSPEC_DLLEXPORT
HAVE_DECLSPEC_DLLEXPORT:INTERNAL=1
//Test HAVE_DECLSPEC_THREAD
HAVE_DECLSPEC_THREAD:INTERNAL=1
//Have includes dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Test HAVE_GCC_THREAD_EXTENSION
HAVE_GCC_THREAD_EXTENSION:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have include memory.h
HAVE_MEMORY_H:INTERNAL=1
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have includes strings.h
HAVE_STRINGS_H:INTERNAL=
//Have include string.h
HAVE_STRING_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Result of TRY_COMPILE
HAVE__SOCKLEN_SIZE:INTERNAL=FALSE
//Have includes arpa/inet.h
LOG4CPLUS_HAVE_ARPA_INET_H:INTERNAL=
//Test LOG4CPLUS_HAVE_C99_VARIADIC_MACROS
LOG4CPLUS_HAVE_C99_VARIADIC_MACROS:INTERNAL=1
//Have function clock_gettime
LOG4CPLUS_HAVE_CLOCK_GETTIME:INTERNAL=
//Have function clock_nanosleep
LOG4CPLUS_HAVE_CLOCK_NANOSLEEP:INTERNAL=
//Test LOG4CPLUS_HAVE_CXX11_ATOMICS
LOG4CPLUS_HAVE_CXX11_ATOMICS:INTERNAL=1
//Have symbol ENAMETOOLONG
LOG4CPLUS_HAVE_ENAMETOOLONG:INTERNAL=1
//Have include errno.h
LOG4CPLUS_HAVE_ERRNO_H:INTERNAL=1
//Have function fcntl
LOG4CPLUS_HAVE_FCNTL:INTERNAL=
//Have include fcntl.h
LOG4CPLUS_HAVE_FCNTL_H:INTERNAL=1
//Have function lockf
LOG4CPLUS_HAVE_FLOCK:INTERNAL=
//Have function ftime
LOG4CPLUS_HAVE_FTIME:INTERNAL=1
//Have symbol __FUNCTION__
LOG4CPLUS_HAVE_FUNCTION_MACRO:INTERNAL=1
//Have symbol __func__
LOG4CPLUS_HAVE_FUNC_SYMBOL:INTERNAL=
//Have function getaddrinfo
LOG4CPLUS_HAVE_GETADDRINFO:INTERNAL=
//Have function gethostbyname_r
LOG4CPLUS_HAVE_GETHOSTBYNAME_R:INTERNAL=
//Have function getpid
LOG4CPLUS_HAVE_GETPID:INTERNAL=1
//Have symbol SYS_gettid
LOG4CPLUS_HAVE_GETTID:INTERNAL=
//Have function gettimeofday
LOG4CPLUS_HAVE_GETTIMEOFDAY:INTERNAL=
//Have function gmtime_r
LOG4CPLUS_HAVE_GMTIME_R:INTERNAL=
//Test LOG4CPLUS_HAVE_GNU_VARIADIC_MACROS
LOG4CPLUS_HAVE_GNU_VARIADIC_MACROS:INTERNAL=
//Have function htonl
LOG4CPLUS_HAVE_HTONL:INTERNAL=
//Have function htons
LOG4CPLUS_HAVE_HTONS:INTERNAL=
//Have includes iconv.h
LOG4CPLUS_HAVE_ICONV_H:INTERNAL=
//Have include limits.h
LOG4CPLUS_HAVE_LIMITS_H:INTERNAL=1
//Have function localtime_r
LOG4CPLUS_HAVE_LOCALTIME_R:INTERNAL=
//Have function flock
LOG4CPLUS_HAVE_LOCKF:INTERNAL=
//Have function lstat
LOG4CPLUS_HAVE_LSTAT:INTERNAL=
//Have function mbstowcs
LOG4CPLUS_HAVE_MBSTOWCS:INTERNAL=1
//Have function nanosleep
LOG4CPLUS_HAVE_NANOSLEEP:INTERNAL=
//Have includes netdb.h
LOG4CPLUS_HAVE_NETDB_H:INTERNAL=
//Have includes netinet/in.h
LOG4CPLUS_HAVE_NETINET_IN_H:INTERNAL=
//Have includes netinet/tcp.h
LOG4CPLUS_HAVE_NETINET_TCP_H:INTERNAL=
//Have function ntohl
LOG4CPLUS_HAVE_NTOHL:INTERNAL=
//Have function ntohs
LOG4CPLUS_HAVE_NTOHS:INTERNAL=
//Have symbol __PRETTY_FUNCTION__
LOG4CPLUS_HAVE_PRETTY_FUNCTION_MACRO:INTERNAL=
//Have function stat
LOG4CPLUS_HAVE_STAT:INTERNAL=1
//Have include stdarg.h
LOG4CPLUS_HAVE_STDARG_H:INTERNAL=1
//Have include stdio.h
LOG4CPLUS_HAVE_STDIO_H:INTERNAL=1
//Have include stdlib.h
LOG4CPLUS_HAVE_STDLIB_H:INTERNAL=1
//Have includes syslog.h
LOG4CPLUS_HAVE_SYSLOG_H:INTERNAL=
//Have includes sys/file.h
LOG4CPLUS_HAVE_SYS_FILE_H:INTERNAL=
//Have includes sys/socket.h
LOG4CPLUS_HAVE_SYS_SOCKET_H:INTERNAL=
//Have include sys/stat.h
LOG4CPLUS_HAVE_SYS_STAT_H:INTERNAL=1
//Have includes sys/syscall.h
LOG4CPLUS_HAVE_SYS_SYSCALL_H:INTERNAL=
//Have include sys/timeb.h
LOG4CPLUS_HAVE_SYS_TIMEB_H:INTERNAL=1
//Have includes sys/time.h
LOG4CPLUS_HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
LOG4CPLUS_HAVE_SYS_TYPES_H:INTERNAL=1
//Have include time.h
LOG4CPLUS_HAVE_TIME_H:INTERNAL=1
//Have includes unistd.h
LOG4CPLUS_HAVE_UNISTD_H:INTERNAL=
//Have function vfprintf_s
LOG4CPLUS_HAVE_VFPRINTF_S:INTERNAL=1
//Have function vfwprintf_s
LOG4CPLUS_HAVE_VFWPRINTF_S:INTERNAL=1
//Have function vsnprintf
LOG4CPLUS_HAVE_VSNPRINTF:INTERNAL=1
//Have function vsprintf_s
LOG4CPLUS_HAVE_VSPRINTF_S:INTERNAL=1
//Have function vswprintf_s
LOG4CPLUS_HAVE_VSWPRINTF_S:INTERNAL=1
//Have include wchar.h
LOG4CPLUS_HAVE_WCHAR_H:INTERNAL=1
//Have function wcstombs
LOG4CPLUS_HAVE_WCSTOMBS:INTERNAL=1
//Have function _vsnprintf
LOG4CPLUS_HAVE__VSNPRINTF:INTERNAL=1
//Have function _vsnprintf_s
LOG4CPLUS_HAVE__VSNPRINTF_S:INTERNAL=1
//Have function _vsnwprintf_s
LOG4CPLUS_HAVE__VSNWPRINTF_S:INTERNAL=1
//Test LOG4CPLUS_HAVE___SYNC_ADD_AND_FETCH
LOG4CPLUS_HAVE___SYNC_ADD_AND_FETCH:INTERNAL=
//Test LOG4CPLUS_HAVE___SYNC_SUB_AND_FETCH
LOG4CPLUS_HAVE___SYNC_SUB_AND_FETCH:INTERNAL=
//Have include stdlib.h;stdio.h;stdarg.h;string.h;float.h
STDC_HEADERS:INTERNAL=1
//ADVANCED property for variable: WIX_ROOT_DIR
WIX_ROOT_DIR-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: socklen_t unknown
_SOCKLEN_SIZE:INTERNAL=

